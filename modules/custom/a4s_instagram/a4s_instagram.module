<?php

/**
 * @file 2
 * Module for Instagram API
 */

/**
 * Implements hook_menu().
 */
function a4s_instagram_menu() {
  $items = array();
  
  $items['insta'] = array(
    'title' => t('Instagram API'),
    'page callback' => 'a4s_instagram_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['insta_behat'] = array(
    'title' => t('Instagram Behat endpoint'),
    'page callback' => 'a4s_instagram_behat',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * 
 */
function a4s_instagram_behat() {
  
  /*
  $url = '';
  $ch = curl_init($url);
  curl_setopt($ch, CURLOPT_POST, TRUE);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
  //curl_setopt($ch, CURLOPT_USERPWD, $username . ":" . $password);
  $results = json_decode(curl_exec($ch), TRUE);
  curl_close($ch);
  */
  $status = TRUE;
  $errors = NULL;
  $cookies = NULL;
  if (!empty($_REQUEST['op'])) {
    switch ($_REQUEST['op']) {
      case 'set_cookies':
        if (empty($_REQUEST['target_domain']) || empty($_REQUEST['cookies'])|| empty($_REQUEST['username'])) {
          $status = FALSE;
          $errors = 'Wrong source parameters';
          break;
        }
        else {
          $behat_insta_cookies = variable_get('a4s_behat_insta_cookies', array());
          $behat_insta_cookies[$_REQUEST['target_domain']][$_REQUEST['username']]['cookies'] = unserialize($_REQUEST['cookies']);
          variable_set('a4s_behat_insta_cookies', $behat_insta_cookies);
        }
        break;
        
      case 'get_cookies':
        if (empty($_REQUEST['target_domain']) || empty($_REQUEST['username'])) {
          $status = FALSE;
          $errors = 'Wrong source parameters';
          break;
        }
        else {
          $behat_insta_cookies = variable_get('a4s_behat_insta_cookies', array());
          if (!empty($behat_insta_cookies[$_REQUEST['target_domain']][$_REQUEST['username']]['cookies'])) {
            $cookies = $behat_insta_cookies[$_REQUEST['target_domain']][$_REQUEST['username']]['cookies'];
          }
        }
        break;
    }
  }
  watchdog('Request from Behat', '$_REQUEST ==> <pre>' . print_r($_REQUEST, TRUE) . '</pre>, $_SERVER ==> <pre>' . print_r($_SERVER, TRUE) . '</pre>');
  echo json_encode(array('status' => $status, '$_request' => $_REQUEST, 'errors' => $errors, 'cookies' => $cookies));
}

/**
 * 
 * @return string
 */
function  a4s_instagram_page() {
  
  $instagram_accounts_granted = variable_get('instagram_accounts_granted', NULL);
  if (!empty($instagram_accounts_granted) && !empty($instagram_accounts_granted['all4senses'])) {
    dpm($instagram_accounts_granted, '$instagram_accounts_granted');
    dpm('We have access. Let\'s Rock!');
   
    return 'Processed a real request to Instagram...';
  }
  
  dpm($_REQUEST, '$_REQUEST');
  $CLIENT_ID = '1eca294b0a6b478b9de165d9384edac1';
  $REDIRECT_URI = 'http://m-a-y.ru/insta';
  $CLIENT_SECRET = '59007de215f4492fb4cdca497e3b943a';
  
  if (!empty($_REQUEST['code'])) {
    $url = 'https://api.instagram.com/oauth/access_token';

    $data = array(
      'client_id' => $CLIENT_ID,
      'client_secret' => $CLIENT_SECRET,
      'grant_type' => 'authorization_code',
      'redirect_uri' => $REDIRECT_URI,
      'code'=> $_REQUEST['code'],
    ); 

    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POST, count($data));
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    $results = json_decode(curl_exec($ch), TRUE);
    curl_close($ch);
    dpm($results, '$results');
    if (!empty($results['access_token'])) {
      $instagram_accounts_granted[$results['user']['username']] = $results;
      variable_set('instagram_accounts_granted', $instagram_accounts_granted);
    }
    $out = 'We have got an access_token...';
    drupal_goto($REDIRECT_URI);
  }
  else {
     
    $out = '<a href="https://api.instagram.com/oauth/authorize/?client_id=' . $CLIENT_ID. '&redirect_uri=' . $REDIRECT_URI . '&response_type=code" >Authorize with Instagram</a>';
  }
  return $out;
}

/**
 * 
 * @param type $user
 */
function a4s_insta_get_userInfo($otherPage = 'all4senses') {
  
  //$otherPage = 'all4senses';
  $url = "https://www.instagram.com/$otherPage/?__a=1";
  $response = file_get_contents($url);
  if ($response !== false) {
      $data = json_decode($response, true);
      dpm($data, '$data');
      if ($data !== null) {
          $follows = $data['user']['follows']['count'];
          $followedBy = $data['user']['followed_by']['count'];
          echo $follows . ' and ' . $followedBy;
      }
  }

}


function a4s_insta_queryData() {
  
  $target_user_id = 4016509096; // solo
  //$target_user_id = 6218303298; // a4s
  $variables = '{"id":"6218303298","first":10,"after":"AQCrgtZyW1dKfkQI8Xm7n4VmC_28FRCjFZ8ht_5WHNHsLJau_FwFjqdIB-yfqqJJk4sjA47Qd1SZHp-dS2yMej7-QuIdzzr0A6KwEOvs9CtxdA"}';
  //$end_cursor = 'AQCrgtZyW1dKfkQI8Xm7n4VmC_28FRCjFZ8ht_5WHNHsLJau_FwFjqdIB-yfqqJJk4sjA47Qd1SZHp-dS2yMej7-QuIdzzr0A6KwEOvs9CtxdA';
  $end_cursor = 'AQCcbXzjdc_ZfOPp0T9xKt0lH-IYCbcbHjhF_NNy6R6DW19AnG4pGEKjYjPZXO5XezMQCPr7-fJWA63LWzY0Q3HfQ9jQ6zVjXYu1VO6dCwU_DA';
  //$end_cursor = '';
  $variables = '{"id":' . '"' . $target_user_id. '","first":10,"after":"' . $end_cursor . '"}';
  $variables = urlencode($variables);
  $query_hash = '37479f2b8209594dde7facb0d904896a'; // Folowers
  $query_hash = '58712303d941c6855d4e888c5f0cd22f'; // Folowing

  //$url = "https://www.instagram.com/graphql/query/?query_hash=37479f2b8209594dde7facb0d904896a&variables=%7B%22id%22%3A%226218303298%22%2C%22first%22%3A10%2C%22after%22%3A%22AQC2c5Ud8R_m2Wagr8TnGYNRsQO-N0letvJFx7JH1NH3ySwey3NVgUF_uw7hdoyMgqouz1TBbZasNbIAoSlfDi_pxQm8bQvmkO7UFGhcQN_YvA%22%7D";


  $url = "https://www.instagram.com/graphql/query/?query_hash=$query_hash&variables=$variables";

  //query_hash:37479f2b8209594dde7facb0d904896a
  //variables:{"id":"6218303298","first":10,"after":"AQCrgtZyW1dKfkQI8Xm7n4VmC_28FRCjFZ8ht_5WHNHsLJau_FwFjqdIB-yfqqJJk4sjA47Qd1SZHp-dS2yMej7-QuIdzzr0A6KwEOvs9CtxdA"}

  $ch = curl_init($url);
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_POST, 0);

  curl_setopt($ch, CURLOPT_HTTPHEADER, array('Cookie: csrftoken=GJ3PPaL2FfIQYA9J2RfkI2tYfdWeD0VD; ds_user_id=6218303298; sessionid=6218303298%3AUSbb2R456PKkYn%3A12; '));

  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

  $results = json_decode(curl_exec($ch));

  curl_close($ch);
  dpm($results, '$results');
}



function a4s_insta_queryData_graphql($type = 'folowers', $username) {
  
  switch ($type) {
    case 'folowers':
      $query_hash = '37479f2b8209594dde7facb0d904896a'; // Folowers
      break;
    case 'folowing':
      $query_hash = '58712303d941c6855d4e888c5f0cd22f'; // Folowing
      break;
  }
  
  $target_user_id = 4016509096; // solo
  //$target_user_id = 6218303298; // a4s
  $variables = '{"id":"6218303298","first":10,"after":"AQCrgtZyW1dKfkQI8Xm7n4VmC_28FRCjFZ8ht_5WHNHsLJau_FwFjqdIB-yfqqJJk4sjA47Qd1SZHp-dS2yMej7-QuIdzzr0A6KwEOvs9CtxdA"}';
  //$end_cursor = 'AQCrgtZyW1dKfkQI8Xm7n4VmC_28FRCjFZ8ht_5WHNHsLJau_FwFjqdIB-yfqqJJk4sjA47Qd1SZHp-dS2yMej7-QuIdzzr0A6KwEOvs9CtxdA';
  $end_cursor = 'AQCcbXzjdc_ZfOPp0T9xKt0lH-IYCbcbHjhF_NNy6R6DW19AnG4pGEKjYjPZXO5XezMQCPr7-fJWA63LWzY0Q3HfQ9jQ6zVjXYu1VO6dCwU_DA';
  //$end_cursor = '';
  $variables = '{"id":' . '"' . $target_user_id. '","first":10,"after":"' . $end_cursor . '"}';
  $variables = urlencode($variables);
  $query_hash = '37479f2b8209594dde7facb0d904896a'; // Folowers
  $query_hash = '58712303d941c6855d4e888c5f0cd22f'; // Folowing

  //$url = "https://www.instagram.com/graphql/query/?query_hash=37479f2b8209594dde7facb0d904896a&variables=%7B%22id%22%3A%226218303298%22%2C%22first%22%3A10%2C%22after%22%3A%22AQC2c5Ud8R_m2Wagr8TnGYNRsQO-N0letvJFx7JH1NH3ySwey3NVgUF_uw7hdoyMgqouz1TBbZasNbIAoSlfDi_pxQm8bQvmkO7UFGhcQN_YvA%22%7D";


  $url = "https://www.instagram.com/graphql/query/?query_hash=$query_hash&variables=$variables";

  //query_hash:37479f2b8209594dde7facb0d904896a
  //variables:{"id":"6218303298","first":10,"after":"AQCrgtZyW1dKfkQI8Xm7n4VmC_28FRCjFZ8ht_5WHNHsLJau_FwFjqdIB-yfqqJJk4sjA47Qd1SZHp-dS2yMej7-QuIdzzr0A6KwEOvs9CtxdA"}

  $ch = curl_init($url);
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_POST, 0);

  curl_setopt($ch, CURLOPT_HTTPHEADER, array('Cookie: csrftoken=GJ3PPaL2FfIQYA9J2RfkI2tYfdWeD0VD; ds_user_id=6218303298; sessionid=6218303298%3AUSbb2R456PKkYn%3A12; '));

  curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

  $results = json_decode(curl_exec($ch));

  curl_close($ch);
  dpm($results, '$results');
}



/**
 * https://gist.github.com/cosmocatalano/4544576
 * and fix instead of file_get_contents()
 * https://stackoverflow.com/questions/21677579/server-configuration-by-allow-url-fopen-0-in
 *'code' in media is an url tag for image, like https://www.instagram.com/p/BeQ84NSlzQN/
 *
 * @param type $type
 * @param type $target
 * @param type $max_id
 * @return array
 */
function a4s_insta_getByType_page($type, $target, $max_id = NULL) {
  switch ($type) {
    case 'user/profile':
    case 'user/media':
      $target_url = 'https://instagram.com/'. $target;
      break;
    case 'tag':
      $target_url = 'https://instagram.com/explore/tags/'. $target;
      break;
  }
  if ($max_id) {
    $target_url .= '?max_id=' . $max_id; 
  }
  
  $insta_source = a4s_insta_getData_fromWebPage($target_url, $cookiesIn = '');
  $shards = explode('window._sharedData = ', $insta_source['content']);
  $insta_json = explode(';</script>', $shards[1]); 
  $insta_array = json_decode($insta_json[0], TRUE);
  
  switch ($type) {
    case 'user/profile':
      // Remove actual media data, as we return here only a general profile info
      $insta_array['entry_data']['ProfilePage'][0]['user']['media']['nodes'] = array();
      $out = $insta_array['entry_data']['ProfilePage'][0]['user'];
      break;
    case 'user/media':
      $out = $insta_array['entry_data']['ProfilePage'][0]['user']['media'];
      break;
    case 'tag':
      $out = $insta_array['entry_data']['TagPage'][0]['graphql']['hashtag']['edge_hashtag_to_media'];
      break;
  }
  return $out;
}

/**
 * 
 * @param type $type
 * @param type $target
 * @param type $pages_count
 */
function a4s_insta_getByType_data($type, $target, $pages_count = NULL) {
  $data = array();
  $data_all = array();
  $max_id = NULL;
  while ($pages_count--) {
    $data = a4s_insta_getByType_page($type, $target, $max_id);
    // Ignore $pages_count for a user/profile request
    if ($type == 'user/profile' || !$data['page_info']['has_next_page'] || empty($data['page_info']['end_cursor'])) {
      $data_all = $data;
      break;
    }
    $max_id = $data['page_info']['end_cursor'];
    $data_all = array_merge($data_all, $data['edges']);
  }
  dpm($data_all, '$data_all');
}

/**
 * 
 * @param type $url
 * @param type $cookiesIn
 * @return type
 */
function a4s_insta_getData_fromWebPage($url, $cookiesIn = ''){
            
    $options = array(
      CURLOPT_RETURNTRANSFER => true,     // return web page
      CURLOPT_HEADER         => true,     //return headers in addition to content
      CURLOPT_FOLLOWLOCATION => true,     // follow redirects
      CURLOPT_ENCODING       => "",       // handle all encodings
      CURLOPT_AUTOREFERER    => true,     // set referer on redirect
      CURLOPT_CONNECTTIMEOUT => 120,      // timeout on connect
      CURLOPT_TIMEOUT        => 120,      // timeout on response
      CURLOPT_MAXREDIRS      => 10,       // stop after 10 redirects
      CURLINFO_HEADER_OUT    => true,
      CURLOPT_SSL_VERIFYPEER => true,     // Validate SSL Cert
      CURLOPT_HTTP_VERSION   => CURL_HTTP_VERSION_1_1,
      CURLOPT_COOKIE         => $cookiesIn
    );

    $ch      = curl_init( $url );
    curl_setopt_array( $ch, $options );
    $rough_content = curl_exec( $ch );
    $err     = curl_errno( $ch );
    $errmsg  = curl_error( $ch );
    $header  = curl_getinfo( $ch );
    curl_close( $ch );

    $header_content = substr($rough_content, 0, $header['header_size']);
    $body_content = trim(str_replace($header_content, '', $rough_content));
    $pattern = "#Set-Cookie:\\s+(?<cookie>[^=]+=[^;]+)#m"; 
    preg_match_all($pattern, $header_content, $matches); 
    $cookiesOut = implode("; ", $matches['cookie']);

    $header['errno']   = $err;
    $header['errmsg']  = $errmsg;
    $header['headers']  = $header_content;
    $header['content'] = $body_content;
    $header['cookies'] = $cookiesOut;
    return $header;
}