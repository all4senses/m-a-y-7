<?php

/**
 * @file 2
 * Module for building and managing site's pages.
 */

/**
 * Implements hook_menu().
 */
function may_pages_menu() {
  $items = array();
  /*
    $items['sh-get'] = array(
    'title' => 'Sh Get',
    'page callback' => 'may_pages_sh_get',
    //'access callback' => 'may_misc_userIsAdmin',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );
   */
  
  $items['interiors/by-type/%'] = array(
    'title' => 'Sh Get',
    'page callback' => 'may_pages_get_pictures_by_type',
    'page arguments' => array(1,3),
    //'access callback' => 'may_misc_userIsAdmin',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    );
  return $items;
}

/**
 * Implements hook_access().
 */
function may_pages_access($type = null) {
  switch ($type) {
    default:
      if (arg(1) == 'edit') {
        if (!user_access('administer site configuration')) {
          return false;
        }
      }
      break;
  }
  return true;
}

/**
 * Implements hook_form_alter().
 *
 * @param array &$form
 *   Array with declared form.
 *
 * @param array &$form_state
 *   Array with current form state.
 *
 * @param string $form_id
 *   Form ID.
 *
 * @return void
 *   Return nothing.
 */
function may_pages_form_alter(&$form, &$form_state, $form_id) {

  //dpm($form_id);  dpm($form);

  switch ($form_id) {

    case 'project_node_form':
      may_pages_passExtraParametersToCKEditor();
      break;
  } // End of switch ($form_id) {
}

/**
 * Implements hook_node_view().
 *
 * @return void
 *   Return nothing.
 */
function may_pages_node_view($node, $view_mode) {

  //dpm($node, '$node in node_view');

  switch ($node->type) {
    case 'project':
      break;
  } // End of switch ($node->type) {
}

/**
 *
 * @param type $variables
 * Works with page view only, not on edit form
 */
function may_pages_preprocess_node(&$variables) {

  /*
    static $custom_pages_css_added;
    if ($variables['type'] == 'project' && !$custom_pages_css_added) {

    //dpm($variables, '$variables in bootstrap_may_preprocess_node');

    $custom_pages_css_added = TRUE;
    $project_custom_css = path_to_theme() . '/css/projects.css';
    if (file_exists($project_custom_css)) {
    drupal_add_css($project_custom_css, array('weight' => 99, 'group' => 200));
    }

    drupal_add_js('sites/all/libraries/jquery.plugins/_sliders/slick/slick.js');
    drupal_add_css('sites/all/libraries/jquery.plugins/_sliders/slick/slick.css', array('weight' => 99, 'group' => 200));
    drupal_add_css('sites/all/libraries/jquery.plugins/_sliders/slick/slick-theme.css', array('weight' => 99, 'group' => 200));

    drupal_add_js('sites/all/libraries/jquery.plugins/_sliders/slick-lightbox/dist/slick-lightbox.min.js');
    drupal_add_css('sites/all/libraries/jquery.plugins/_sliders/slick-lightbox/dist/slick-lightbox.css', array('weight' => 99, 'group' => 200));

    $path_to_custom_js = drupal_get_path('module', 'may_pages') . '/js/';
    drupal_add_js($path_to_custom_js . 'may_slick.js');
    }
   */
}

/**
 *
 * @param type $variables
 * Works with page view and edit form
 */
function may_pages_preprocess_page($variables) {
  //dpm($variables, '$variables in may_pages_preprocess_page');
}

/**
 *
 * @param type $variables
 * Works with page view and edit form
 */
function may_pages_preprocess_html(&$variables) {
  $variables['head_title_array']['slogan'] = variable_get('site_slogan');
  $variables['head_title'] = $variables['head_title_array']['title'] . ' | ' . $variables['head_title_array']['name'] . ' | ' . $variables['head_title_array']['slogan'];
}

/**
 * Pass extra parameters to cKeditor
 */
function may_pages_passExtraParametersToCKEditor() {
  $extra_imagefield_attributes = imagefield_attributes_get_all_attributes_names(FALSE, TRUE);
  $extraParametersToCKEditor = array(
    // Add New Allowed Content attributes to tags in CKEditor
    'custom_img_attr_fields' => array_merge(array('id', 'class', 'alt', 'title'), $extra_imagefield_attributes),
    'custom_div_attr_fields' => array_merge(array('id', 'class', 'alt', 'title', 'style', 'parallax', 'parallaxx'), $extra_imagefield_attributes),
    'custom_attr_fields_textarea_type' => array('data-type', 'data-order', 'style'),
    // Pass to CKEditor a css file for the Project page type
    'project_custom_css_file' => url(drupal_get_path('theme', variable_get('theme_default', NULL)) . '/css/projects.css', array('absolute' => TRUE)),
  );
  drupal_add_js($extraParametersToCKEditor, array('type' => 'setting'));
}

/**
 * Implements hook_block_info().
 */
function may_pages_block_info() {

  $blocks['sticky_header_big'] = array(
    'info' => 'Big sticky header with menu',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['sticky_header_small'] = array(
    'info' => 'Small sticky header with menu',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function may_pages_block_view($delta = '') {
  $block = array();
  switch ($delta) {

    case 'sticky_header_big':
      $block['subject'] = 'Big sticky header with menu';
      $block['content'] = may_pages_getStickyHeader('big');
      break;

    case 'sticky_header_small':
      $block['subject'] = 'Small sticky header with menu';
      $block['content'] = may_pages_getStickyHeader('small');
      break;
  }

  return $block;
}

/**
 *
 * @param type $target
 * @return type
 */
function may_pages_getStickyHeader($target = 'big') {

  $upper_menu = may_pages_getStickyHeader_upperMenu();
  $main_menu = may_pages_getStickyHeader_mainMenu();

  $output = <<<HTML
  <div class="sticky-header $target">
    <header class="cd-auto-hide-header">
      <div class="logo"><a href="/"><div style="width: 50px; height: 30px; background: violet;" alt="Logo"></div></a></div>
      $upper_menu
    </header> <!-- .cd-auto-hide-header -->
    <section class="cd-hero">
      <div class="cd-hero-content">
        <!-- your content here -->
      </div>
    </section> <!-- .cd-hero -->
    $main_menu
   </div>
HTML;

  return $output;
}

/**
 *
 * @return type
 */
function may_pages_getStickyHeader_upperMenu() {

  $menu = menu_tree_all_data('menu-upper-menu');
  $themed_menu = may_pages_get_menu_children_themed($menu);
  $output = <<<HTML
    <nav class="cd-primary-nav">
      <div class="navbar navbar-default---2 yamm">
          <div class="navbar-header">
            <!-- <button type="button" data-toggle="collapse" data-target="#navbar-collapse-1" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button> -->
            <!-- <a href="#" class="navbar-brand">Upper slogan/title line</a> -->
            <div class="top-slogan-title navbar-brand">Мастерская Архитектурных Идей</div>
          </div>
      <!--
          <div id="navbar-collapse-1" class="navbar-collapse collapse">
            $themed_menu
          </div>
      -->
      </div>
    </nav> <!-- .cd-primary-nav -->
HTML;

  return $output;
}

/**
 *
 * @return type
 */
function may_pages_getStickyHeader_mainMenu() {

  $menu = menu_tree_all_data('main-menu');
  $themed_menu = may_pages_get_menu_children_themed($menu);
  $output = <<<HTML
      <nav class="cd-secondary-nav">
        <div class="navbar navbar-default yamm">
          <div class="navbar-header">
            <button type="button" data-toggle="collapse" data-target="#navbar-collapse-2" class="navbar-toggle"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button>
            <a href="#" class="navbar-brand">М.А.Й.RU</a>
          </div>
          <div id="navbar-collapse-2" class="navbar-collapse collapse">
            $themed_menu
          </div>
        </div>
      </nav> <!-- .cd-secondary-nav -->
HTML;

  return $output;
}

/**
 *
 * @param type $menu_parent
 * @param type $level
 * @return string
 */
function may_pages_get_menu_children_themed($menu_parent, $level = 0) {
  $ul_class = ' class="' . ($level == 0 ? 'nav navbar-nav' : 'dropdown-menu') . '"';
  $layout = '<ul' . $ul_class . '>';
  foreach ($menu_parent as $key => $item) {
    if (!empty($item['link']['hidden'])) {
      continue;
    }
    //dpm($item, '$item');
    $li_class = $a_class = $caret = null;
    if ($item['link']['link_path'] == '<separator>') {
      $layout .= '<li class="divider"></li>';
      continue;
    }
    if ($level == 0) {
      $li_class = ' class="dropdown"';
    }
    elseif (!empty($item['below'])) {
      $li_class = ' class="dropdown dropdown-submenu"';
    }
    if (!empty($item['below'])) {
      $a_class = ' class="dropdown-toggle" data-toggle="dropdown"';
      if ($level == 0) {
        $caret = ' <b class="caret"></b>';
      }
    } 
    $layout .= '<li' . $li_class . '><a' . $a_class . ' href="' . ($item['link']['link_path'] == '<nolink>' ? '#' : ($item['link']['link_path'] == '<front>' ? '/' : '/'. $item['link']['link_path'])    ) . '">' . $item['link']['link_title'] . $caret . '</a>';
    if (!empty($item['below'])) {
      $layout .= may_pages_get_menu_children_themed($item['below'], $level + 1);
    }
    $layout .= '</li>';
  }
  $layout .= '</ul>';
  return $layout;
}

/**
 *
 * @param type $theme_registry
 */
function may_pages_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['image_resize_filter_image'])) {
    $theme_registry['image_resize_filter_image']['function'] = 'may_pages_resize_filter_image';
    $theme_registry['image_resize_filter_image']['theme path'] = drupal_get_path('module', 'may_pages');
  }
}

/**
 * Generate a themed image tag based on an image array.
 *
 * @param $image
 *   An array containing image information and properties.
 * @param $settings
 *   Settings for the input filter.
 */
function may_pages_resize_filter_image($variables) {
  $image = $variables['image'];

  // a4s patch
  if ($image['original'] != $image['attributes']['src']) {
    $image['attributes']['data-original'] = $image['original'];
  }
  else {
    unset($image['attributes']['data-original']);
  }
  
  
  
  
  // Reset the size to the original TEMPORARILY
  $image['attributes']['src'] = $image['original'];
  
  //dpm($image, '$image');
  
  //$styles = array('large' => '480w', 'medium' => '220w', 'thumbnail' => '100w');
  $styles = array('350' => '350w', '500' => '500w', '800' => '800w', '1000' => '1000w', '1200' => '1200w');
  
  static $slick_lightbox_source_data;
  if (!isset($slick_lightbox_source_data)) {
    $slick_lightbox_source_data = array(
      // Add New Allowed Content attributes to tags in CKEditor
      'slick_lightbox_source_data' => array('sizes' => array_keys($styles)),
    );
    drupal_add_js($slick_lightbox_source_data, array('type' => 'setting'));
  }
  
  
  
  list(,$original_path) = explode('f', $image['attributes']['src']);
  $image['attributes']['data-originalpath'] = $original_path;
  $image['attributes']['srcset'] = '';
  foreach ($styles as $style_name => $style_size) {
    $image['attributes']['srcset'] .= ($image['attributes']['srcset'] ? ', ' : '') . '/f/styles/' . $style_name . '/public' . $original_path . ' ' . $style_size;
  }
  
  if (!empty($image['attributes']['width']) && !empty($image['attributes']['height'])) {
    $image['attributes']['data-iaspect'] = $image['attributes']['height']/$image['attributes']['width'];
  }
      
  //$sizes = array('(min-width:768px)' => '768px', '(min-width:460px)' => '220px', '(min-width:0px)' => '100vw');
  $sizes = array('(min-width:768px)' => '768px', '(min-width:0px)' => '100vw');
  foreach ($sizes as $size_name => $size_size) {
   if ($size_name == '(min-width:768px)') {
    if (!empty($image['attributes']['width']) && $image['attributes']['width'] != '123') {
      $image['attributes']['sizes'] = $size_name . ' ' . $image['attributes']['width'] . 'px';
    }
    else {
     $image['attributes']['sizes'] = $size_name . ' ' . $size_size;
    }
   }
   else {
     $image['attributes']['sizes'] .= ', ' . $size_name . ' ' . $size_size;
   }
  }
  
  //$image['attributes']['srcset'] = 'http://a4s-local.m-a-y-7.ru/f/styles/large/public/img/olga_yuskasova/interiors/1-9/777777.jpg?itok=26nV71hC 480w, http://a4s-local.m-a-y-7.ru/f/styles/medium/public/img/olga_yuskasova/interiors/1-9/777777.jpg?itok=co1erRKH 220w, http://a4s-local.m-a-y-7.ru/f/styles/thumbnail/public/img/olga_yuskasova/interiors/1-9/777777.jpg?itok=IxNKc6hT 100w';
  //$image['attributes']['sizes'] = '(min-width:768px) 768px, (min-width:460px) 220px, (min-width:0px) 100vw';
      
  //dpm($image['attributes'], '$image[attributes]');
  
  $output = '<img' . drupal_attributes($image['attributes']) . ' />';
  if ($image['link']) {
    $output = '<a' . drupal_attributes($image['link']['attributes']) . '>' . $output . '</a>';
  }
  return $output;
}

function may_pages_get_pictures_by_type($a1, $a2) {
  dpm(arg(),'arg()');
  dpm($a1, '$a1');
  dpm($a2, '$a2');
}